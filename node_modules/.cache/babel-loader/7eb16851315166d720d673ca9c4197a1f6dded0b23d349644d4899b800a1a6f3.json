{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aparna\\\\Desktop\\\\NutriFit-Hub\\\\nutrifit\\\\src\\\\pages\\\\Check.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { FaRobot, FaUserMd } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Check = () => {\n  _s();\n  const [symptom, setSymptom] = useState(\"\");\n  const [chat, setChat] = useState([{\n    sender: \"bot\",\n    message: \"üëã Hi! I'm your AI Health Assistant. Tell me your symptoms to get guidance.\"\n  }]);\n  const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n  const handleSend = async () => {\n    if (symptom.trim() === \"\") return;\n    const updatedChat = [...chat, {\n      sender: \"user\",\n      message: symptom\n    }];\n    setChat(updatedChat);\n    try {\n      const response = await axios.post(\"https://api.openai.com/v1/chat/completions\", {\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          role: \"user\",\n          content: `I have ${symptom}. Suggest me health tips.`\n        }],\n        max_tokens: 150\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`\n        }\n      });\n      const aiResponse = response.data.choices[0].message.content;\n      setChat(prev => [...prev, {\n        sender: \"bot\",\n        message: aiResponse\n      }]);\n    } catch (error) {\n      setChat(prev => [...prev, {\n        sender: \"bot\",\n        message: \"‚ö†Ô∏è Failed to fetch AI response. Please try again later.\"\n      }]);\n      console.error(error);\n    }\n    setSymptom(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 p-4 rounded shadow-lg bg-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center fw-bold mb-4 text-primary\",\n      children: [/*#__PURE__*/_jsxDEV(FaRobot, {\n        className: \"me-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \" AI Symptom Chat\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box p-3 bg-white rounded shadow mb-4\",\n      style: {\n        height: \"400px\",\n        overflowY: \"auto\"\n      },\n      children: chat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-3 p-3 rounded ${msg.sender === \"bot\" ? \"bg-light text-dark\" : \"bg-primary text-white text-end\"}`,\n        children: [msg.sender === \"bot\" ? /*#__PURE__*/_jsxDEV(FaRobot, {\n          className: \"me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(FaUserMd, {\n          className: \"me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 68\n        }, this), msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control p-3\",\n        placeholder: \"Describe your symptom...\",\n        value: symptom,\n        onChange: e => setSymptom(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info text-white fw-bold px-4\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Check, \"uAqH0zJNkv5TLkr+55LCVC7YogY=\");\n_c = Check;\nexport default Check;\nvar _c;\n$RefreshReg$(_c, \"Check\");","map":{"version":3,"names":["React","useState","axios","FaRobot","FaUserMd","jsxDEV","_jsxDEV","Check","_s","symptom","setSymptom","chat","setChat","sender","message","apiKey","process","env","REACT_APP_OPENAI_API_KEY","handleSend","trim","updatedChat","response","post","model","messages","role","content","max_tokens","headers","Authorization","aiResponse","data","choices","prev","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","overflowY","map","msg","index","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aparna/Desktop/NutriFit-Hub/nutrifit/src/pages/Check.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FaRobot, FaUserMd } from \"react-icons/fa\";\r\n\r\nconst Check = () => {\r\n  const [symptom, setSymptom] = useState(\"\");\r\n  const [chat, setChat] = useState([\r\n    { sender: \"bot\", message: \"üëã Hi! I'm your AI Health Assistant. Tell me your symptoms to get guidance.\" },\r\n  ]);\r\n  const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\r\n\r\n  const handleSend = async () => {\r\n    if (symptom.trim() === \"\") return;\r\n    const updatedChat = [...chat, { sender: \"user\", message: symptom }];\r\n    setChat(updatedChat);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://api.openai.com/v1/chat/completions\",\r\n        {\r\n          model: \"gpt-3.5-turbo\",\r\n          messages: [{ role: \"user\", content: `I have ${symptom}. Suggest me health tips.` }],\r\n          max_tokens: 150,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiKey}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const aiResponse = response.data.choices[0].message.content;\r\n      setChat((prev) => [...prev, { sender: \"bot\", message: aiResponse }]);\r\n    } catch (error) {\r\n      setChat((prev) => [...prev, { sender: \"bot\", message: \"‚ö†Ô∏è Failed to fetch AI response. Please try again later.\" }]);\r\n      console.error(error);\r\n    }\r\n    setSymptom(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5 p-4 rounded shadow-lg bg-light\">\r\n      <h2 className=\"text-center fw-bold mb-4 text-primary\">\r\n        <FaRobot className=\"me-2\" /> AI Symptom Chat\r\n      </h2>\r\n\r\n      <div className=\"chat-box p-3 bg-white rounded shadow mb-4\" style={{ height: \"400px\", overflowY: \"auto\" }}>\r\n        {chat.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`mb-3 p-3 rounded ${\r\n              msg.sender === \"bot\" ? \"bg-light text-dark\" : \"bg-primary text-white text-end\"\r\n            }`}\r\n          >\r\n            {msg.sender === \"bot\" ? <FaRobot className=\"me-2\" /> : <FaUserMd className=\"me-2\" />}\r\n            {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control p-3\"\r\n          placeholder=\"Describe your symptom...\"\r\n          value={symptom}\r\n          onChange={(e) => setSymptom(e.target.value)}\r\n          onKeyPress={(e) => e.key === \"Enter\" && handleSend()}\r\n        />\r\n        <button className=\"btn btn-info text-white fw-bold px-4\" onClick={handleSend}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Check;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}